{"ast":null,"code":"import { getRange } from './dates.js';\n/**\n * Returns a value no smaller than min and no larger than max.\n *\n * @param {Date} value Value to return.\n * @param {Date} min Minimum return value.\n * @param {Date} max Maximum return value.\n * @returns {Date} Value between min and max.\n */\nexport function between(value, min, max) {\n  if (min && min > value) {\n    return min;\n  }\n  if (max && max < value) {\n    return max;\n  }\n  return value;\n}\nexport function isValueWithinRange(value, range) {\n  return range[0] <= value && range[1] >= value;\n}\nexport function isRangeWithinRange(greaterRange, smallerRange) {\n  return greaterRange[0] <= smallerRange[0] && greaterRange[1] >= smallerRange[1];\n}\nexport function doRangesOverlap(range1, range2) {\n  return isValueWithinRange(range1[0], range2) || isValueWithinRange(range1[1], range2);\n}\nfunction getRangeClassNames(valueRange, dateRange, baseClassName) {\n  var isRange = doRangesOverlap(dateRange, valueRange);\n  var classes = [];\n  if (isRange) {\n    classes.push(baseClassName);\n    var isRangeStart = isValueWithinRange(valueRange[0], dateRange);\n    var isRangeEnd = isValueWithinRange(valueRange[1], dateRange);\n    if (isRangeStart) {\n      classes.push(\"\".concat(baseClassName, \"Start\"));\n    }\n    if (isRangeEnd) {\n      classes.push(\"\".concat(baseClassName, \"End\"));\n    }\n    if (isRangeStart && isRangeEnd) {\n      classes.push(\"\".concat(baseClassName, \"BothEnds\"));\n    }\n  }\n  return classes;\n}\nfunction isCompleteValue(value) {\n  if (Array.isArray(value)) {\n    return value[0] !== null && value[1] !== null;\n  }\n  return value !== null;\n}\nexport function getTileClasses(args) {\n  if (!args) {\n    throw new Error('args is required');\n  }\n  var value = args.value,\n    date = args.date,\n    hover = args.hover;\n  var className = 'react-calendar__tile';\n  var classes = [className];\n  if (!date) {\n    return classes;\n  }\n  var now = new Date();\n  var dateRange = function () {\n    if (Array.isArray(date)) {\n      return date;\n    }\n    var dateType = args.dateType;\n    if (!dateType) {\n      throw new Error('dateType is required when date is not an array of two dates');\n    }\n    return getRange(dateType, date);\n  }();\n  if (isValueWithinRange(now, dateRange)) {\n    classes.push(\"\".concat(className, \"--now\"));\n  }\n  if (!value || !isCompleteValue(value)) {\n    return classes;\n  }\n  var valueRange = function () {\n    if (Array.isArray(value)) {\n      return value;\n    }\n    var valueType = args.valueType;\n    if (!valueType) {\n      throw new Error('valueType is required when value is not an array of two dates');\n    }\n    return getRange(valueType, value);\n  }();\n  if (isRangeWithinRange(valueRange, dateRange)) {\n    classes.push(\"\".concat(className, \"--active\"));\n  } else if (doRangesOverlap(valueRange, dateRange)) {\n    classes.push(\"\".concat(className, \"--hasActive\"));\n  }\n  var valueRangeClassNames = getRangeClassNames(valueRange, dateRange, \"\".concat(className, \"--range\"));\n  classes.push.apply(classes, valueRangeClassNames);\n  var valueArray = Array.isArray(value) ? value : [value];\n  if (hover && valueArray.length === 1) {\n    var hoverRange = hover > valueRange[0] ? [valueRange[0], hover] : [hover, valueRange[0]];\n    var hoverRangeClassNames = getRangeClassNames(hoverRange, dateRange, \"\".concat(className, \"--hover\"));\n    classes.push.apply(classes, hoverRangeClassNames);\n  }\n  return classes;\n}","map":{"version":3,"names":["getRange","between","value","min","max","isValueWithinRange","range","isRangeWithinRange","greaterRange","smallerRange","doRangesOverlap","range1","range2","getRangeClassNames","valueRange","dateRange","baseClassName","isRange","classes","push","isRangeStart","isRangeEnd","concat","isCompleteValue","Array","isArray","getTileClasses","args","Error","date","hover","className","now","Date","dateType","valueType","valueRangeClassNames","apply","valueArray","length","hoverRange","hoverRangeClassNames"],"sources":["D:/Own_Create/calendar/node_modules/react-calendar/dist/esm/shared/utils.js"],"sourcesContent":["import { getRange } from './dates.js';\n/**\n * Returns a value no smaller than min and no larger than max.\n *\n * @param {Date} value Value to return.\n * @param {Date} min Minimum return value.\n * @param {Date} max Maximum return value.\n * @returns {Date} Value between min and max.\n */\nexport function between(value, min, max) {\n    if (min && min > value) {\n        return min;\n    }\n    if (max && max < value) {\n        return max;\n    }\n    return value;\n}\nexport function isValueWithinRange(value, range) {\n    return range[0] <= value && range[1] >= value;\n}\nexport function isRangeWithinRange(greaterRange, smallerRange) {\n    return greaterRange[0] <= smallerRange[0] && greaterRange[1] >= smallerRange[1];\n}\nexport function doRangesOverlap(range1, range2) {\n    return isValueWithinRange(range1[0], range2) || isValueWithinRange(range1[1], range2);\n}\nfunction getRangeClassNames(valueRange, dateRange, baseClassName) {\n    var isRange = doRangesOverlap(dateRange, valueRange);\n    var classes = [];\n    if (isRange) {\n        classes.push(baseClassName);\n        var isRangeStart = isValueWithinRange(valueRange[0], dateRange);\n        var isRangeEnd = isValueWithinRange(valueRange[1], dateRange);\n        if (isRangeStart) {\n            classes.push(\"\".concat(baseClassName, \"Start\"));\n        }\n        if (isRangeEnd) {\n            classes.push(\"\".concat(baseClassName, \"End\"));\n        }\n        if (isRangeStart && isRangeEnd) {\n            classes.push(\"\".concat(baseClassName, \"BothEnds\"));\n        }\n    }\n    return classes;\n}\nfunction isCompleteValue(value) {\n    if (Array.isArray(value)) {\n        return value[0] !== null && value[1] !== null;\n    }\n    return value !== null;\n}\nexport function getTileClasses(args) {\n    if (!args) {\n        throw new Error('args is required');\n    }\n    var value = args.value, date = args.date, hover = args.hover;\n    var className = 'react-calendar__tile';\n    var classes = [className];\n    if (!date) {\n        return classes;\n    }\n    var now = new Date();\n    var dateRange = (function () {\n        if (Array.isArray(date)) {\n            return date;\n        }\n        var dateType = args.dateType;\n        if (!dateType) {\n            throw new Error('dateType is required when date is not an array of two dates');\n        }\n        return getRange(dateType, date);\n    })();\n    if (isValueWithinRange(now, dateRange)) {\n        classes.push(\"\".concat(className, \"--now\"));\n    }\n    if (!value || !isCompleteValue(value)) {\n        return classes;\n    }\n    var valueRange = (function () {\n        if (Array.isArray(value)) {\n            return value;\n        }\n        var valueType = args.valueType;\n        if (!valueType) {\n            throw new Error('valueType is required when value is not an array of two dates');\n        }\n        return getRange(valueType, value);\n    })();\n    if (isRangeWithinRange(valueRange, dateRange)) {\n        classes.push(\"\".concat(className, \"--active\"));\n    }\n    else if (doRangesOverlap(valueRange, dateRange)) {\n        classes.push(\"\".concat(className, \"--hasActive\"));\n    }\n    var valueRangeClassNames = getRangeClassNames(valueRange, dateRange, \"\".concat(className, \"--range\"));\n    classes.push.apply(classes, valueRangeClassNames);\n    var valueArray = Array.isArray(value) ? value : [value];\n    if (hover && valueArray.length === 1) {\n        var hoverRange = hover > valueRange[0] ? [valueRange[0], hover] : [hover, valueRange[0]];\n        var hoverRangeClassNames = getRangeClassNames(hoverRange, dateRange, \"\".concat(className, \"--hover\"));\n        classes.push.apply(classes, hoverRangeClassNames);\n    }\n    return classes;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}